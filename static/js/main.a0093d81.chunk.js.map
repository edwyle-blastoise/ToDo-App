{"version":3,"sources":["components/todo-list-item/index.js","components/todo-list-item/todo-list-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/app-header/index.js","components/app-header/app-header.js","components/search-panel/index.js","components/search-panel/search-panel.js","components/item-status-filter/index.js","components/item-status-filter/item-status-filter.js","components/add-item/add-item.js","components/app/index.js","components/app/app.js","index.js"],"names":["TodoListItem","this","props","label","onDeleted","onToggleImportant","onToggleDone","classNames","done","important","className","onClick","type","Component","TodoList","todos","elements","map","item","id","itemProps","key","AppHeader","toDo","SearchPanel","state","inputValue","onInputChange","event","target","value","setState","placeholder","onChange","ItemStatusFilter","buttons","name","filter","onFilterChange","clazz","AddItem","onLabelChange","onSubmit","preventDefault","addItem","App","maxId","todoData","createTodoItem","deleteItem","idx","findIndex","el","slice","text","newItem","toggleProperty","arr","propName","oldItem","items","toLowerCase","indexOf","visibleItems","search","doneCount","length","todoCount","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0093d81.chunk.js","sourcesContent":["import TodoListItem from \"./todo-list-item\";\n\nexport default TodoListItem;\n","import React, { Component } from \"react\";\nimport './todo-list-item.css';\n\n\nexport default class TodoListItem extends Component {\n\n    render () {\n        const { label, onDeleted, onToggleImportant, onToggleDone, done, important } = this.props;\n\n        let classNames = 'todo-list-item';\n        if (done) {\n            classNames += ' done';\n        }\n\n        if(important) {\n            classNames += ' important'\n        }\n\n        return (\n            <span className={classNames}>\n            <span className=\"todo-list-item-label\"\n                  onClick={ onToggleDone }\n            >\n              { label }\n            </span>\n            <button type=\"button\" className=\"btn btn-outline-success btn-sm float-right\"\n                    onClick={ onToggleImportant }>\n                <i className=\"fa fa-exclamation\" />\n            </button>\n            <button type=\"button\" className=\"btn btn-outline-danger btn-sm float-right\"\n                    onClick={ onDeleted }\n            >\n                <i className=\"fa fa-trash-o\" />\n            </button>\n        </span>\n        )\n    }\n};\n\n","import TodoList from \"./todo-list\";\n\nexport default TodoList;\n","import React from \"react\";\nimport './todo-list.css';\n\nimport TodoListItem from \"../todo-list-item\";\n\nconst TodoList = ({ todos, onDeleted, onToggleImportant, onToggleDone }) => {\n\n    const elements = todos.map((item) => {\n\n        const { id, ...itemProps } = item;\n        return (\n            <li key={id} className=\"list-group-item\">\n                <TodoListItem\n                    { ...itemProps }\n                    onDeleted={() => onDeleted(id)}\n                    onToggleImportant={() => onToggleImportant(id)}\n                    onToggleDone={() => onToggleDone(id)}\n                />\n            </li>\n        )\n    });\n\n    return (\n        <ul className=\"list-group todo-list\">\n            { elements }\n        </ul>\n    );\n};\n\nexport default TodoList;\n","import AppHeader from \"./app-header\";\n\nexport default AppHeader;\n","import React from \"react\";\nimport './app-header.css';\n\nconst AppHeader = ({toDo, done}) => {\n    return (\n        <div className=\"app-header\">\n            <h1>Todo List</h1>\n            <h2>{toDo} more to do, {done} done</h2>\n        </div>\n\n    );\n};\n\nexport default AppHeader;\n","import SearchPanel from \"./search-panel\";\n\nexport default SearchPanel;\n","import React, { Component } from \"react\";\nimport './search-panel.css';\n\nexport default class SearchPanel extends Component {\n\n    state = {\n        inputValue: ''\n    };\n\n    onInputChange = (event) => {\n        const inputValue = event.target.value;\n        this.setState({ inputValue });\n        this.props.onInputChange(inputValue);\n    };\n\n    render() {\n        return (\n            <input className=\"form-control search-input\"\n                   placeholder=\"type to search\"\n                   value={this.state.inputValue}\n                   onChange={this.onInputChange}\n            />\n        );\n    }\n};\n\n","import ItemStatusFilter from \"./item-status-filter\";\n\nexport default ItemStatusFilter;\n","import React, { Component } from \"react\";\nimport './item-status-filter.css';\n\nexport default class ItemStatusFilter extends Component {\n\n    buttons = [\n        {name: 'all', label: 'All'},\n        {name: 'active', label: 'Active'},\n        {name: 'done', label: 'Done'}\n    ];\n\n    render() {\n\n        const { filter, onFilterChange } = this.props;\n\n        const buttons = this.buttons.map(({name, label}) => {\n            const isActive = filter === name;\n            const clazz = isActive ? 'btn-info' : 'btn-outline-secondary';\n\n            return (\n                <button type=\"button\"\n                        className={`btn ${clazz}`}\n                        key={name}\n                        onClick={() => {onFilterChange(name)}}>\n                    {label}\n                </button>\n            )\n        });\n        return (\n            <div className=\"btn-group\">\n                {buttons}\n            </div>\n        )\n    }\n};\n\n","import React, { Component } from \"react\";\n\nimport './add-item.css'\n\nexport default class AddItem extends Component {\n\n    state = {\n        label: ''\n    };\n\n    onLabelChange = (event) => {\n      this.setState({\n          label: event.target.value\n      })\n    };\n\n    onSubmit = (event) => {\n        event.preventDefault();\n        this.props.addItem(this.state.label)\n        this.setState({\n            label: ''\n        })\n    };\n\n    render() {\n        return(\n            <form className=\"add-item d-flex\"\n                    onSubmit={this.onSubmit}>\n                <input type=\"text\" className=\"form-control\"\n                        onChange={this.onLabelChange}\n                        placeholder=\"What needs to be done\"\n                        value={this.state.label} />\n                <button className=\"btn btn-outline-secondary\">Add Item</button>\n            </form>\n        )\n    }\n};\n","import App from \"./app\";\n\nexport default App;\n","import React, { Component } from 'react';\n\nimport TodoList from \"../todo-list\";\nimport AppHeader from \"../app-header\";\nimport SearchPanel from \"../search-panel\";\nimport ItemStatusFilter from \"../item-status-filter\";\nimport AddItem from \"../add-item/add-item\";\n\nimport './app.css';\n\nexport default class App extends Component {\n\n    maxId = 100;\n\n    state = {\n        todoData: [\n            this.createTodoItem('Drink Coffee'),\n            this.createTodoItem('Make Awesome App'),\n            this.createTodoItem('Have a lunch')\n        ],\n        inputValue: '',\n        filter: 'all' //active, all, done\n    };\n\n    createTodoItem(label) {\n        return {\n            label,\n            important: false,\n            done: false,\n            id: this.maxId++\n        }\n    }\n\n    deleteItem = (id) => {\n\n        this.setState(({ todoData }) => {\n            const idx = todoData.findIndex((el) => el.id === id);\n\n            // const before = todoData.slice(0, idx);\n            // const after = todoData.slice(idx + 1);\n            //\n            // const newArray = [ ...before, ...after ];\n\n            const newArray = [\n                ...todoData.slice(0, idx),\n                ...todoData.slice(idx + 1)\n            ];\n            return {\n                todoData: newArray\n            }\n        })\n    };\n\n    addItem = (text) => {\n        const newItem = this.createTodoItem(text);\n\n        //add element in array\n        this.setState(({ todoData }) => {\n            const newArr = [ ...todoData, newItem ];\n\n            return{\n                todoData: newArr\n            }\n        })\n    };\n\n    toggleProperty(arr, id, propName) {\n            const idx = arr.findIndex((el) => el.id === id);\n\n            // 1. update object\n            const oldItem = arr[idx];\n            const newItem = { ...oldItem, [propName]: !oldItem[propName] };\n\n            // 2. construct new array\n        return [\n                ...arr.slice(0, idx),\n                newItem,\n                ...arr.slice(idx + 1)\n            ]\n    }\n\n    onToggleDone = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'done')\n            }\n        })\n    };\n\n    onToggleImportant = (id) => {\n        this.setState(({ todoData }) => {\n            return {\n                todoData: this.toggleProperty(todoData, id, 'important')\n            }\n        })\n    };\n\n    filter(items, filter) {\n      switch(filter) {\n          case 'all':\n              return items;\n          case 'active':\n              return items.filter((el) => !el.done);\n          case 'done':\n              return items.filter((el) => el.done);\n          default:\n              return items;\n      }\n    };\n\n    onFilterChange = (filter) => {\n        this.setState({ filter })\n    };\n\n    search(items, inputValue) {\n\n        if (inputValue === 0) {\n            return items;\n        }\n\n       // return items.filter(item => {\n       //      return item.label.toLowerCase().includes((inputValue).toLowerCase())\n       //  });\n\n        return items.filter(item => {\n            return item.label.toLowerCase().indexOf(inputValue.toLowerCase()) > -1;\n        });\n    };\n\n    onInputChange = (inputValue) => {\n        this.setState({ inputValue })\n    };\n\n    render() {\n        const { todoData, inputValue, filter } = this.state;\n\n        const visibleItems = this.filter(this.search(todoData, inputValue), filter);\n\n        const doneCount = todoData.filter((el) => el.done).length;\n        const todoCount = todoData.length - doneCount;\n\n        return (\n            <div className=\"todo-app\">\n                <AppHeader toDo={todoCount} done={doneCount}/>\n\n                <div className=\"search-panel d-flex\">\n                    <SearchPanel\n                        onInputChange={this.onInputChange}/>\n                    <ItemStatusFilter\n                        filter={filter}\n                        onFilterChange={this.onFilterChange}/>\n                </div>\n\n                <TodoList\n                    todos={visibleItems}\n                    onDeleted={this.deleteItem}\n                    onToggleImportant={this.onToggleImportant}\n                    onToggleDone={this.onToggleDone}\n                />\n\n                <AddItem addItem={this.addItem}/>\n            </div>\n        )\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from \"./components/app\";\n\n    ReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}